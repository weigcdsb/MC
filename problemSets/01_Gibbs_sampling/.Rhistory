setwd('D:\\GitHub\\MC\\problemSets\\01_Gibbs_sampling')
library(knitr)
library(MASS)
library(HDInterval)
library(scales)
opts_chunk$set(echo = TRUE,
warning=FALSE,
message=FALSE,
out.width = "80%",
fig.align = "center")
X.kde <- kde2d(X[, 1], X[, 2], n = 100)
image(X.kde, main = 'Gibbs Sampler',
xlab = 'x1', ylab = 'x2')
lines(X[, 1], X[, 2], type = 'p',
col = alpha(1, 0.2), pch = 16, cex = 0.5)
Sig <- matrix(c(1, .5,
.5, 1), nrow = 2, byrow = T)
set.seed(1)
mu <- c(1, 2)
Sig <- matrix(c(1, .5,
.5, 1), nrow = 2, byrow = T)
BVNs <- mvrnorm(5000, mu, Sig)
## plot
BVNs.kde <- kde2d(BVNs[, 1], BVNs[, 2], n = 100)
image(BVNs.kde, main = 'Bivariate Normal',
xlab = 'x1', ylab = 'x2')
contour(BVNs.kde, add = T)
par(mfrow = c(2, 2))
plot(X[, 1], main = 'trace of X1',
xlab = 'iteration', ylab = 'X1')
hist(X[, 1], xlab = 'X1', main = 'Histogram of X1')
plot(X[, 2], main = 'trace of X2',
xlab = 'iteration', ylab = 'X2')
hist(X[, 2], xlab = 'X2', main = 'Histogram of X2')
par(mfrow = c(1, 1))
par(mfrow = c(1, 2))
hist(temp)
qqnorm(temp)
abline(a = mean(temp), b= sd(temp),
col = 'red', lwd = 2)
par(mfrow = c(1, 1))
shapiro.test(temp)
temp.mean <- mean(temp)
temp.var <- var(temp)
temp.n <- length(temp)
temp.mean
temp.var
nGS <- 5000
PHI <- matrix(NA, nrow = nGS, ncol = 2)
## prior
mu0 <- temp.mean
tau20 <- 1
nu0 <- 1
sig20 <- 0.01
## initialization
PHI[1, ] <- c(temp.mean, 1/temp.var)
## GS
set.seed(3)
for(i in 2:nGS){
## update theta
mun <- (mu0/tau20 + temp.n*temp.mean*PHI[i-1, 2])/
(1/tau20 + temp.n*PHI[i-1, 2])
tau2n <- 1/(1/tau20 + temp.n*PHI[i-1, 2])
PHI[i, 1] <- rnorm(1, mun, sqrt(tau2n))
## update sig2
alphn <- (nu0 + temp.n)/2
betan <- (nu0*sig20 + (temp.n-1)*temp.var + temp.n*(temp.mean - PHI[i, 1])^2)/2
PHI[i, 2] <- rgamma(1, alphn, betan)
}
PHI.kde <- kde2d(PHI[, 1], PHI[, 2], n = 100)
image(PHI.kde, main = 'Gibbs Sampler',
xlab = 'theta', ylab = '1/sig2')
lines(PHI[, 1], PHI[, 2], type = 'p',
col = alpha(1, 0.2), pch = 16, cex = 0.5)
par(mfrow = c(2, 2))
plot(PHI[, 1], main = 'trace of theta',
xlab = 'iteration', ylab = 'theta')
hist(PHI[, 1], xlab = 'theta',
main = 'Histogram of theta')
theta.hdi <- hdi(PHI[, 1], credMass = 0.95)
theta.quantile <- quantile(PHI[, 1], c(0.025, 0.975))
abline(v = mean(PHI[, 1]), lwd = 2, col = 'red')
abline(v = theta.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = theta.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = theta.quantile[1], lwd = 2, col = 'orange')
abline(v = theta.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'))
plot(PHI[, 2], main = 'trace of 1/sig2',
xlab = 'iteration', ylab = '1/sig2')
hist(PHI[, 2], xlab = '1/sig2',
main = 'Histogram of 1/sig2')
invSig2.hdi <- hdi(PHI[, 2], credMass = 0.95)
invSig2.quantile <- quantile(PHI[, 2], c(0.025, 0.975))
abline(v = mean(PHI[, 2]), lwd = 2, col = 'red')
abline(v = invSig2.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = invSig2.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = invSig2.quantile[1], lwd = 2, col = 'orange')
abline(v = invSig2.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'))
par(mfrow = c(1, 1))
cat('sdfsdf', 1)
theta.hdi
cat('95% HPD: [', theta.hdi[1], ',', theta.hdi[2], ']')
cat('posterior mean:', mean(PHI[, 1]))
cat('95% HPD: [', theta.hdi[1], ',', theta.hdi[2], ']')
cat('95% symmetric credible interval: [', theta.quantile[1], ',', theta.quantile[2], ']')
cat('posterior mean:', mean(PHI[, 1]), '\n')
cat('95% HPD: [', theta.hdi[1], ',', theta.hdi[2], ']')
cat('95% symmetric credible interval: [', theta.quantile[1], ',', theta.quantile[2], ']')
cat('posterior mean:', mean(PHI[, 1]), '\n')
cat('95% HPD: [', theta.hdi[1], ',', theta.hdi[2], ']', '\n')
cat('95% symmetric credible interval: [', theta.quantile[1], ',', theta.quantile[2], ']')
cat('posterior mean:', mean(PHI[, 2]), '\n')
cat('95% HPD: [', invSig2.hdi[1], ',', invSig2.hdi[2], ']', '\n')
cat('95% symmetric credible interval: [', invSig2.quantile[1], ',', invSig2.quantile[2], ']')
cat('sample mean': temp.mean)
cat('sample mean:', temp.mean)
cat('sample variance:', temp.var)
cat('sample mean:', temp.mean, '\n')
cat('sample precision:', 1/temp.var)
par(mfrow = c(2, 2))
plot(PHI[, 1], main = 'trace of theta',
xlab = 'iteration', ylab = 'theta')
hist(PHI[, 1], xlab = 'theta',
main = 'Histogram of theta')
theta.hdi <- hdi(PHI[, 1], credMass = 0.95)
theta.quantile <- quantile(PHI[, 1], c(0.025, 0.975))
abline(v = mean(PHI[, 1]), lwd = 2, col = 'red')
abline(v = theta.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = theta.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = theta.quantile[1], lwd = 2, col = 'orange')
abline(v = theta.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'))
plot(PHI[, 2], main = 'trace of 1/sig2',
xlab = 'iteration', ylab = '1/sig2')
hist(PHI[, 2], xlab = '1/sig2',
main = 'Histogram of 1/sig2')
invSig2.hdi <- hdi(PHI[, 2], credMass = 0.95)
invSig2.quantile <- quantile(PHI[, 2], c(0.025, 0.975))
abline(v = mean(PHI[, 2]), lwd = 2, col = 'red')
abline(v = invSig2.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = invSig2.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = invSig2.quantile[1], lwd = 2, col = 'orange')
abline(v = invSig2.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.5)
par(mfrow = c(1, 1))
par(mfrow = c(2, 2))
plot(PHI[, 1], main = 'trace of theta',
xlab = 'iteration', ylab = 'theta')
hist(PHI[, 1], xlab = 'theta',
main = 'Histogram of theta')
theta.hdi <- hdi(PHI[, 1], credMass = 0.95)
theta.quantile <- quantile(PHI[, 1], c(0.025, 0.975))
abline(v = mean(PHI[, 1]), lwd = 2, col = 'red')
abline(v = theta.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = theta.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = theta.quantile[1], lwd = 2, col = 'orange')
abline(v = theta.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'))
plot(PHI[, 2], main = 'trace of 1/sig2',
xlab = 'iteration', ylab = '1/sig2')
hist(PHI[, 2], xlab = '1/sig2',
main = 'Histogram of 1/sig2')
invSig2.hdi <- hdi(PHI[, 2], credMass = 0.95)
invSig2.quantile <- quantile(PHI[, 2], c(0.025, 0.975))
abline(v = mean(PHI[, 2]), lwd = 2, col = 'red')
abline(v = invSig2.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = invSig2.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = invSig2.quantile[1], lwd = 2, col = 'orange')
abline(v = invSig2.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.2)
par(mfrow = c(1, 1))
par(mfrow = c(2, 2))
plot(PHI[, 1], main = 'trace of theta',
xlab = 'iteration', ylab = 'theta')
hist(PHI[, 1], xlab = 'theta',
main = 'Histogram of theta')
theta.hdi <- hdi(PHI[, 1], credMass = 0.95)
theta.quantile <- quantile(PHI[, 1], c(0.025, 0.975))
abline(v = mean(PHI[, 1]), lwd = 2, col = 'red')
abline(v = theta.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = theta.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = theta.quantile[1], lwd = 2, col = 'orange')
abline(v = theta.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'))
plot(PHI[, 2], main = 'trace of 1/sig2',
xlab = 'iteration', ylab = '1/sig2')
hist(PHI[, 2], xlab = '1/sig2',
main = 'Histogram of 1/sig2')
invSig2.hdi <- hdi(PHI[, 2], credMass = 0.95)
invSig2.quantile <- quantile(PHI[, 2], c(0.025, 0.975))
abline(v = mean(PHI[, 2]), lwd = 2, col = 'red')
abline(v = invSig2.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = invSig2.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = invSig2.quantile[1], lwd = 2, col = 'orange')
abline(v = invSig2.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.1)
par(mfrow = c(1, 1))
par(mfrow = c(2, 2))
plot(PHI[, 1], main = 'trace of theta',
xlab = 'iteration', ylab = 'theta')
hist(PHI[, 1], xlab = 'theta',
main = 'Histogram of theta')
theta.hdi <- hdi(PHI[, 1], credMass = 0.95)
theta.quantile <- quantile(PHI[, 1], c(0.025, 0.975))
abline(v = mean(PHI[, 1]), lwd = 2, col = 'red')
abline(v = theta.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = theta.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = theta.quantile[1], lwd = 2, col = 'orange')
abline(v = theta.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'))
plot(PHI[, 2], main = 'trace of 1/sig2',
xlab = 'iteration', ylab = '1/sig2')
hist(PHI[, 2], xlab = '1/sig2',
main = 'Histogram of 1/sig2')
invSig2.hdi <- hdi(PHI[, 2], credMass = 0.95)
invSig2.quantile <- quantile(PHI[, 2], c(0.025, 0.975))
abline(v = mean(PHI[, 2]), lwd = 2, col = 'red')
abline(v = invSig2.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = invSig2.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = invSig2.quantile[1], lwd = 2, col = 'orange')
abline(v = invSig2.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.5)
par(mfrow = c(1, 1))
par(mfrow = c(2, 2))
plot(PHI[, 1], main = 'trace of theta',
xlab = 'iteration', ylab = 'theta')
hist(PHI[, 1], xlab = 'theta',
main = 'Histogram of theta')
theta.hdi <- hdi(PHI[, 1], credMass = 0.95)
theta.quantile <- quantile(PHI[, 1], c(0.025, 0.975))
abline(v = mean(PHI[, 1]), lwd = 2, col = 'red')
abline(v = theta.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = theta.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = theta.quantile[1], lwd = 2, col = 'orange')
abline(v = theta.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'))
plot(PHI[, 2], main = 'trace of 1/sig2',
xlab = 'iteration', ylab = '1/sig2')
hist(PHI[, 2], xlab = '1/sig2',
main = 'Histogram of 1/sig2')
invSig2.hdi <- hdi(PHI[, 2], credMass = 0.95)
invSig2.quantile <- quantile(PHI[, 2], c(0.025, 0.975))
abline(v = mean(PHI[, 2]), lwd = 2, col = 'red')
abline(v = invSig2.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = invSig2.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = invSig2.quantile[1], lwd = 2, col = 'orange')
abline(v = invSig2.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.6)
par(mfrow = c(1, 1))
par(mfrow = c(2, 2))
plot(PHI[, 1], main = 'trace of theta',
xlab = 'iteration', ylab = 'theta')
hist(PHI[, 1], xlab = 'theta',
main = 'Histogram of theta')
theta.hdi <- hdi(PHI[, 1], credMass = 0.95)
theta.quantile <- quantile(PHI[, 1], c(0.025, 0.975))
abline(v = mean(PHI[, 1]), lwd = 2, col = 'red')
abline(v = theta.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = theta.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = theta.quantile[1], lwd = 2, col = 'orange')
abline(v = theta.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.6)
plot(PHI[, 2], main = 'trace of 1/sig2',
xlab = 'iteration', ylab = '1/sig2')
hist(PHI[, 2], xlab = '1/sig2',
main = 'Histogram of 1/sig2')
invSig2.hdi <- hdi(PHI[, 2], credMass = 0.95)
invSig2.quantile <- quantile(PHI[, 2], c(0.025, 0.975))
abline(v = mean(PHI[, 2]), lwd = 2, col = 'red')
abline(v = invSig2.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = invSig2.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = invSig2.quantile[1], lwd = 2, col = 'orange')
abline(v = invSig2.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.6)
par(mfrow = c(1, 1))
setwd('D:\\GitHub\\MC\\problemSets\\01_Gibbs_sampling')
library(knitr)
library(MASS)
library(HDInterval)
library(scales)
opts_chunk$set(echo = TRUE,
warning=FALSE,
message=FALSE,
out.width = "80%",
fig.align = "center")
set.seed(1)
mu <- c(1, 2)
Sig <- matrix(c(1, .5,
.5, 1), nrow = 2, byrow = T)
BVNs <- mvrnorm(5000, mu, Sig)
## plot
BVNs.kde <- kde2d(BVNs[, 1], BVNs[, 2], n = 100)
image(BVNs.kde, main = 'Bivariate Normal',
xlab = 'x1', ylab = 'x2')
contour(BVNs.kde, add = T)
GS_BVN <- function(mu, Sig, nGS, x0){
X <- matrix(NA, nrow = nGS, ncol = 2)
X[1, ] <- x0
for(i in 2:nGS){
## update x1
mu_tmp1 <- mu[1] + Sig[1, 2] %*% solve(Sig[2, 2]) %*% (X[i-1, 2] - mu[2])
sig_tmp1 <- Sig[1, 1] - Sig[1, 2] %*% solve(Sig[2, 2]) %*% Sig[2, 1]
X[i, 1] <- rnorm(1, mu_tmp1, sqrt(sig_tmp1))
## update x2
mu_tmp2 <- mu[2] + Sig[2, 1] %*% solve(Sig[1, 1]) %*% (X[i, 1] - mu[1])
sig_tmp2 <- Sig[2, 2] - Sig[2, 1] %*% solve(Sig[1, 1]) %*% Sig[1, 2]
X[i, 2] <- rnorm(1, mu_tmp2, sqrt(sig_tmp2))
}
return(X)
}
set.seed(2)
x0 <- mu
nGS <- 5000
X <- GS_BVN(mu, Sig, nGS, x0)
## plot
X.kde <- kde2d(X[, 1], X[, 2], n = 100)
image(X.kde, main = 'Gibbs Sampler',
xlab = 'x1', ylab = 'x2')
lines(X[, 1], X[, 2], type = 'p',
col = alpha(1, 0.2), pch = 16, cex = 0.5)
par(mfrow = c(2, 2))
plot(X[, 1], main = 'trace of X1',
xlab = 'iteration', ylab = 'X1')
hist(X[, 1], xlab = 'X1', main = 'Histogram of X1')
plot(X[, 2], main = 'trace of X2',
xlab = 'iteration', ylab = 'X2')
hist(X[, 2], xlab = 'X2', main = 'Histogram of X2')
par(mfrow = c(1, 1))
d2 <- read.table('bodytemp.txt')
temp <- d2$temperature
par(mfrow = c(1, 2))
hist(temp)
qqnorm(temp)
abline(a = mean(temp), b= sd(temp),
col = 'red', lwd = 2)
par(mfrow = c(1, 1))
shapiro.test(temp)
temp.mean <- mean(temp)
temp.var <- var(temp)
temp.n <- length(temp)
cat('sample mean:', temp.mean, '\n')
cat('sample variance:', temp.var)
nGS <- 5000
PHI <- matrix(NA, nrow = nGS, ncol = 2)
## prior
mu0 <- temp.mean
tau20 <- 1
nu0 <- 1
sig20 <- 0.01
## initialization
PHI[1, ] <- c(temp.mean, 1/temp.var)
## GS
set.seed(3)
for(i in 2:nGS){
## update theta
mun <- (mu0/tau20 + temp.n*temp.mean*PHI[i-1, 2])/
(1/tau20 + temp.n*PHI[i-1, 2])
tau2n <- 1/(1/tau20 + temp.n*PHI[i-1, 2])
PHI[i, 1] <- rnorm(1, mun, sqrt(tau2n))
## update sig2
alphn <- (nu0 + temp.n)/2
betan <- (nu0*sig20 + (temp.n-1)*temp.var + temp.n*(temp.mean - PHI[i, 1])^2)/2
PHI[i, 2] <- rgamma(1, alphn, betan)
}
PHI.kde <- kde2d(PHI[, 1], PHI[, 2], n = 100)
image(PHI.kde, main = 'Gibbs Sampler',
xlab = 'theta', ylab = '1/sig2')
lines(PHI[, 1], PHI[, 2], type = 'p',
col = alpha(1, 0.2), pch = 16, cex = 0.5)
par(mfrow = c(2, 2))
plot(PHI[, 1], main = 'trace of theta',
xlab = 'iteration', ylab = 'theta')
hist(PHI[, 1], xlab = 'theta',
main = 'Histogram of theta')
theta.hdi <- hdi(PHI[, 1], credMass = 0.95)
theta.quantile <- quantile(PHI[, 1], c(0.025, 0.975))
abline(v = mean(PHI[, 1]), lwd = 2, col = 'red')
abline(v = theta.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = theta.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = theta.quantile[1], lwd = 2, col = 'orange')
abline(v = theta.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.6)
plot(PHI[, 2], main = 'trace of 1/sig2',
xlab = 'iteration', ylab = '1/sig2')
hist(PHI[, 2], xlab = '1/sig2',
main = 'Histogram of 1/sig2')
invSig2.hdi <- hdi(PHI[, 2], credMass = 0.95)
invSig2.quantile <- quantile(PHI[, 2], c(0.025, 0.975))
abline(v = mean(PHI[, 2]), lwd = 2, col = 'red')
abline(v = invSig2.hdi[1], lwd = 2, col = 'steelblue3')
abline(v = invSig2.hdi[2], lwd = 2, col = 'steelblue3')
abline(v = invSig2.quantile[1], lwd = 2, col = 'orange')
abline(v = invSig2.quantile[2], lwd = 2, col = 'orange')
legend('topright', legend = c('mean', 'HPD', 'quantile'),
lwd = 2, col = c('red', 'steelblue3', 'orange'), cex = 0.6)
par(mfrow = c(1, 1))
cat('posterior mean:', mean(PHI[, 1]), '\n')
cat('95% HPD: [', theta.hdi[1], ',', theta.hdi[2], ']', '\n')
cat('95% symmetric credible interval: [', theta.quantile[1], ',', theta.quantile[2], ']')
cat('posterior mean:', mean(PHI[, 2]), '\n')
cat('95% HPD: [', invSig2.hdi[1], ',', invSig2.hdi[2], ']', '\n')
cat('95% symmetric credible interval: [', invSig2.quantile[1], ',', invSig2.quantile[2], ']')
cat('sample mean:', temp.mean, '\n')
cat('sample precision:', 1/temp.var)
1/invSig2.hdi[1]
1/invSig2.hdi[2]
sig2GS <- 1/PHI[, 2]
sig2.hdi <- hdi(sig2GS, credMass = 0.95)
sig2.quantile <- quantile(sig2GS, c(0.025, 0.975))
cat('posterior mean:', mean(sig2GS, '\n')
cat('95% HPD: [', sig2.hdi[1], ',', sig2.hdi[2], ']', '\n')
sig2GS <- 1/PHI[, 2]
sig2.hdi <- hdi(sig2GS, credMass = 0.95)
sig2.quantile <- quantile(sig2GS, c(0.025, 0.975))
cat('posterior mean:', mean(sig2GS, '\n'))
sig2GS <- 1/PHI[, 2]
sig2.hdi <- hdi(sig2GS, credMass = 0.95)
sig2.quantile <- quantile(sig2GS, c(0.025, 0.975))
cat('posterior mean:', mean(sig2GS), '\n')
cat('95% HPD: [', sig2.hdi[1], ',', sig2.hdi[2], ']', '\n')
cat('95% symmetric credible interval: [', sig2.quantile[1], ',', sig2.quantile[2], ']')
sig2GS <- 1/PHI[, 2]
sig2.hdi <- hdi(sig2GS, credMass = 0.95)
sig2.quantile <- quantile(sig2GS, c(0.025, 0.975))
cat('posterior mean:', mean(sig2GS), '\n')
cat('95% HPD: [', sig2.hdi[1], ',', sig2.hdi[2], ']', '\n')
cat('95% symmetric credible interval: [', sig2.quantile[1], ',', sig2.quantile[2], ']')
plot(dnorm, x = seq(-2, 2, 0.01))
plot(dnorm, xlim=c(-2,2),lwd=2)
plot(function(x){dnorm(x, 98.122, sqrt(0.412))},lwd=2)
plot(function(x){dnorm(x, 98.122, sqrt(0.412))},
lwd=2, xlim = c(98.122-2, 98.122 + 2))
plot(function(x){dnorm(x, 98.122, sqrt(0.412))},
lwd=2, xlim = c(95, 101))
plot(function(x){dnorm(x, 98.122, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
plot(function(x){dnorm(x, 98.370, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
plot(function(x){dnorm(x, 98.122, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
lines(function(x){dnorm(x, 98.370, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
plot(function(x){dnorm(x, 98.122, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
lines(function(x){dnorm(x, 98.370, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
plot(function(x){dnorm(x, 98.370, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
plot(function(x){dnorm(x, 98.122, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
plot(function(x){dnorm(x, 98.370, sqrt(0.676))},
lwd=2)
plot(function(x){dnorm(x, 98.122, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
lines(function(x){dnorm(x, 98.370, sqrt(0.676))},
lwd=2)
plot(function(x){dnorm(x, 98.122, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
plot(function(x){dnorm(x, 98.122, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
lines(dnorm(seq(95, 101, length.out = 1000),
98.370, sqrt(0.676)), lwd=2)
seq(95, 101, length.out = 1000)
x0 <- seq(95, 101, length.out = 1000)
plot(function(x){dnorm(x, 98.122, sqrt(0.676))},
lwd=2, xlim = c(95, 101))
lines(x0, dnorm(x0, 98.370, sqrt(0.676)), lwd=2)
x0 <- seq(95, 101, length.out = 1000)
plot(x0, dnorm(x0, 98.122, sqrt(0.676)), lwd=2)
lines(x0, dnorm(x0, 98.370, sqrt(0.676)), lwd=2)
x0 <- seq(95, 101, length.out = 1000)
plot(x0, dnorm(x0, 98.122, sqrt(0.676)), lwd=2, type = 'l')
lines(x0, dnorm(x0, 98.370, sqrt(0.676)), lwd=2)
x0 <- seq(95, 101, length.out = 1000)
plot(x0, dnorm(x0, 98.122, sqrt(0.676)), lwd=2, type = 'l')
lines(x0, dnorm(x0, 98.122, sqrt(0.676)), lwd=2)
lines(x0, dnorm(x0, 98.370, sqrt(0.412)), lwd=2)
lines(x0, dnorm(x0, 98.370, sqrt(0.412)), lwd=2)
plot(x0, dnorm(x0, 98.122, sqrt(0.676)), lwd=2, type = 'l')
lines(x0, dnorm(x0, 98.122, sqrt(0.676)), lwd=2)
plot(x0, dnorm(x0, 98.122, sqrt(0.676)), lwd=2, type = 'l')
lines(x0, dnorm(x0, 98.122, sqrt(0.412)), lwd=2)
lines(x0, dnorm(x0, 98.370, sqrt(0.676)), lwd=2)
lines(x0, dnorm(x0, 98.370, sqrt(0.412)), lwd=2)
x0 <- seq(95, 101, length.out = 1000)
plot(x0, dnorm(x0, 98.370, sqrt(0.676)), lwd=2, type = 'l')
x0 <- seq(95, 101, length.out = 1000)
plot(x0, dnorm(x0, 98.370, sqrt(0.676)), lwd=2, type = 'l')
abline(v = 98.6)
x0 <- seq(95, 101, length.out = 1000)
plot(x0, dnorm(x0, 98.370, sqrt(0.676)), lwd=2, type = 'l')
abline(v = 98.6)
x0 <- seq(95, 101, length.out = 1000)
plot(x0, dnorm(x0, 98.370, sqrt(0.676)), lwd=2, type = 'l',
ylab = 'density', xlab = 'x')
abline(v = 98.6, lwd = 2, col = 'red')
